version: '3.1'

services:
  user:
    image: user
    build:
      context: ./user
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      - HOST=db
      - DATABASE=${DATABASE_NAME}
      - USERNAME=${DATABASE_USERNAME}
      - PASSWORD=${DATABASE_PASSWORD}
    networks:
      - default

  orders:
    image: orders
    build:
      context: ./orders
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      - HOST=db
      - DATABASE=${DATABASE_NAME}
      - USERNAME=${DATABASE_USERNAME}
      - PASSWORD=${DATABASE_PASSWORD}
    networks:
      - default

  products:
    image: products
    build:
      context: ./products
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      - HOST=db
      - DATABASE=${DATABASE_NAME}
      - USERNAME=${DATABASE_USERNAME}
      - PASSWORD=${DATABASE_PASSWORD}
    networks:
      - default

  db:
    image: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - default

  nginx:
    restart: always
    image: nginx:latest
    container_name: nginx
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "3000:3000"
      - "4000:4000"
      - "5000:5000"
    depends_on:
      - user
      - orders
      - products

networks:
  default:
